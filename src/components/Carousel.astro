---
type Item = { title: string; imagen: string; href?: string };

const DEFAULT_ITEMS: Item[] = [
    {
        title: "Naruto Shippuden",
        imagen: "/naruto.webp",
    },
    {
        title: "Moustro:Historia de Ed Gein",
        imagen: "/mounstro.webp",
    },
    {
        title: "Las muertas",
        imagen: "/muertas.webp",
    },
    {
        title: "Merlina",
        imagen: "/merlina.webp",
    },
    {
        title: "Las Guerreras del Kpop",
        imagen: "/kpop.webp",
    },
    {
        title: "Godzilla Kong",
        imagen: "/godzilla.webp",
    },
    {
        title: "Caramelo",
        imagen: "/caramelo.webp",
    },
    {
        title: "Rosario Tijeras",
        imagen: "/calamar.webp",
    },
    {
        title: "Nadie nos vio partir",
        imagen: "/partir.webp",
    },
    {
        title: "El Juego del Calamar",
        imagen: "/calamar.webp",
    },
];

interface Props {
    title?: string;
    items?: Item[];
}
const { title = "Tendencias", items } = Astro.props;
const list = items?.length ? items : DEFAULT_ITEMS;
const carouselId = "carousel-" + Math.random().toString(36).slice(2, 8);
---

<section class="w-full bg-black pt-8 mb-6 pb-6">
    <div
        class="relative mx-auto max-w-[900px]"
        id={carouselId}
        data-carousel-root
    >
        <h2 class="text-2xl md:text-3xl front-bold
    text-white px-4 mb-6">
            {title}
        </h2>
        <div
            class="flex gap-4 overflow-x-auto scroll-smooth snap-x snap-mandatory
    px-4 no-scrollbar sm:px-10"
            data-carousel
            aria-label="Carousel de tendencias"
        >
            {
                list.map((item) => (
                    <a
                        href={item.href ?? "#"}
                        class="relative snap-start shrink-0
        aspect-2/3 rounded-2xl overflow-hidden bg-neutral-800
        ring-1 ring-white/10"
                    >
                        <img
                            src={item.imagen}
                            alt={item.title}
                            loading="lazy"
                            decoding="async"
                            class="h-full w-full object-cover
            transition-transform duration-300
            hover: scale-105"
                        />
                    </a>
                ))
            }
        </div>
        <div
            class="pointer-events-none absolute inset-y-0 w-8 left-0 bg-gradient-to-r
    from-black to-transparent sm:w-10"
        >
        </div>
        <div
            class="pointer-events-none absolute inset-y-0 w-8 right-0 bg-gradient-to-l
    from-black to-transparent sm:w-10"
        >
        </div>
    </div>
</section>

<style is:global>
    .no-scrollbar::-webkit-scrollbar {
        display: none;
    }
    .no-scrollbar {
        -ms-overflow-style: none;
        scrollbar-width: none;
    }
</style>

<script is:inline>
    (function () {
        const id = "{carouselId}";
        const init = () => {
            const host = document.getElementById(id);
            if (!host) return;
            const root = host.querySelector("[data-carousel]");
            if (!root) return;

            const gap = 16;
            const card = root.querySelector("a");
            const step = () =>
                card
                    ? card.clientWidth + gap
                    : Math.max(root.clientWidth * 0.8, 240);
        };

        if (document.readyState === "loading") {
            document.addEventListener("DOMContentLoaded", init, { once: true });
        } else {
            init();
        }
    })();
</script>
